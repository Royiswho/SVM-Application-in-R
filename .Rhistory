install.packages("ISLR")
names.Auto <- names(Auto)[-c(1, 9, 10)]
library(ISLR)
library(e1071)
attach(Auto)
## a
mpglevel <- rep(0, nrow(Auto))
mpglevel[Auto$mpg > median(Auto$mpg)] <- 1
Auto$mpglevel <- as.factor(mpglevel)
## b
set.seed(115)
tune.linear <- tune(svm, mpglevel ~ ., data = Auto, kernel = "linear",
ranges = list(cost = c(0.001, 0.01, 0.1, 1, 5, 10, 100)))
summary(tune.linear)
# The least error appears when cost is 1.
## c
# poly
set.seed(116)
tune.poly <- tune(svm, mpglevel ~ ., data = Auto, kernel = "polynomial",
ranges = list(cost = c(0.001, 0.01, 0.1, 1, 5, 10, 100),
degree = c(2, 3, 4)))
summary(tune.poly)
# The least error appears when cost is 100 and degree is 2.
# radial
set.seed(117)
tune.radial <- tune(svm, mpglevel ~ ., data = Auto, kernel = "radial",
ranges = list(cost = c(0.001, 0.01, 0.1, 1, 5, 10, 100),
gamma = c(0.001, 0.01, 0.1, 1, 5, 10, 100)))
summary(tune.radial)
# The least error appears when cost is 100 and gamma is 0.01.
best.linear <- svm(mpglevel ~ ., data = Auto, kernel = "linear", cost = 1)
best.poly <- svm(mpglevel ~ ., data = Auto, kernel = "polynomial", cost = 100, degree = 2)
best.radial <- svm(mpglevel ~ ., data = Auto, kernel = "radial", cost = 100, gamma = 0.01)
names.Auto <- names(Auto)[-c(1, 9, 10)]
for (name in names.Auto) {
plot(best.linear, Auto, as.formula(paste("mpg~", name, sep = "")))
par(bg = 'blue')
}
for (name in names.Auto) {
plot(best.poly, Auto, as.formula(paste("mpg~", name, sep = "")))
}
for (name in names.Auto) {
plot(best.radial, Auto, as.formula(paste("mpg~", name, sep = "")))
}
names.Auto <- names(Auto)[-c(1, 9, 10)]
for (name in names.Auto) {
plot(best.linear, Auto, as.formula(paste("mpg~", name, sep = "")))
}
for (name in names.Auto) {
plot(best.poly, Auto, as.formula(paste("mpg~", name, sep = "")))
}
for (name in names.Auto) {
plot(best.radial, Auto, as.formula(paste("mpg~", name, sep = "")))
}
names.Auto <- names(Auto)[-c(1, 9, 10)]
for (name in names.Auto) {
plot(best.linear, Auto, as.formula(paste("mpg~", name, sep = "")), main="Linear SVM")
}
for (name in names.Auto) {
plot(best.poly, Auto, as.formula(paste("mpg~", name, sep = "")), main="Poly SVM")
}
for (name in names.Auto) {
plot(best.radial, Auto, as.formula(paste("mpg~", name, sep = "")), main="Radial SVM")
}
names.Auto <- names(Auto)[-c(1, 9, 10)]
for (name in names.Auto) {
plot(best.linear, Auto, as.formula(paste("mpg~", name, sep = "")))
par(main="Linear SVM")
}
for (name in names.Auto) {
plot(best.poly, Auto, as.formula(paste("mpg~", name, sep = "")), main="Poly SVM")
}
for (name in names.Auto) {
plot(best.radial, Auto, as.formula(paste("mpg~", name, sep = "")), main="Radial SVM")
}
names.Auto <- names(Auto)[-c(1, 9, 10)]
for (name in names.Auto) {
plot(best.linear, Auto, as.formula(paste("mpg~", name, sep = "")))
par(title="Linear SVM")
}
for (name in names.Auto) {
plot(best.poly, Auto, as.formula(paste("mpg~", name, sep = "")), main="Poly SVM")
}
for (name in names.Auto) {
plot(best.radial, Auto, as.formula(paste("mpg~", name, sep = "")), main="Radial SVM")
}
names.Auto <- names(Auto)[-c(1, 9, 10)]
for (name in names.Auto) {
plot(best.linear, Auto, as.formula(paste("mpg~", name, sep = "")))
title(main="Linear SVM")
}
for (name in names.Auto) {
plot(best.poly, Auto, as.formula(paste("mpg~", name, sep = "")), main="Poly SVM")
}
for (name in names.Auto) {
plot(best.radial, Auto, as.formula(paste("mpg~", name, sep = "")), main="Radial SVM")
}
names.Auto <- names(Auto)[-c(1, 9, 10)]
for (name in names.Auto) {
plot(best.linear, Auto, as.formula(paste("mpg~", name, sep = "")), main="FooBar")
}
for (name in names.Auto) {
plot(best.poly, Auto, as.formula(paste("mpg~", name, sep = "")), main="Poly SVM")
}
for (name in names.Auto) {
plot(best.radial, Auto, as.formula(paste("mpg~", name, sep = "")), main="Radial SVM")
}
myplotSVM <- e1071:::plot.svm
environment(myplotSVM)  <- .GlobalEnv
fix(myplotSVM)
function (x, data, formula = NULL, fill = TRUE, grid = 50, slice = list(),
symbolPalette = palette(), svSymbol = "x", dataSymbol = "o",
main="SVN classification plot", ...)
plot.title = title(main = main, # <----- change this part!!!
xlab = names(lis)[2], ylab = names(lis)[1])
names.Auto <- names(Auto)[-c(1, 9, 10)]
for (name in names.Auto) {
par(col.main='white')
plot(best.linear, Auto, as.formula(paste("mpg~", name, sep = "")), main="")
par(col.main='black')
title("Some title")
}
for (name in names.Auto) {
plot(best.poly, Auto, as.formula(paste("mpg~", name, sep = "")), main="Poly SVM")
}
for (name in names.Auto) {
plot(best.radial, Auto, as.formula(paste("mpg~", name, sep = "")), main="Radial SVM")
}
names.Auto <- names(Auto)[-c(1, 9, 10)]
for (name in names.Auto) {
par(col.main='white')
plot(best.linear, Auto, as.formula(paste("mpg~", name, sep = "")), main="")
par(col.main='black')
title("Linear SVM")
}
for (name in names.Auto) {
par(col.main='white')
plot(best.poly, Auto, as.formula(paste("mpg~", name, sep = "")), main="")
par(col.main='black')
title("Poly SVM")
}
for (name in names.Auto) {
par(col.main='white')
plot(best.radial, Auto, as.formula(paste("mpg~", name, sep = "")), main="")
par(col.main='black')
title("Radial SVM")
}
library(ISLR)
library(e1071)
attach(Auto)
## a
mpglevel <- rep(0, nrow(Auto))
mpglevel[Auto$mpg > median(Auto$mpg)] <- 1
Auto$mpglevel <- as.factor(mpglevel)
## b
set.seed(115)
tune.linear <- tune(svm, mpglevel ~ ., data = Auto, kernel = "linear",
ranges = list(cost = c(0.001, 0.01, 0.1, 1, 5, 10, 100)))
summary(tune.linear)
# The least error appears when cost is 1.
library(ISLR)
library(e1071)
attach(Auto)
## a
mpglevel <- rep(0, nrow(Auto))
mpglevel[Auto$mpg > median(Auto$mpg)] <- 1
Auto$mpglevel <- as.factor(mpglevel)
## b
set.seed(115)
tune.linear <- tune(svm, mpglevel ~ ., data = Auto, kernel = "linear",
ranges = list(cost = c(0.001, 0.01, 0.1, 1, 5, 10, 100)))
summary(tune.linear)
# The least error appears when cost is 1.
defaultW <- getOption("warn")
options(warn = -1)
